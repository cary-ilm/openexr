# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) Contributors to the OpenEXR Project.
#
# GitHub Actions workflow file
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: CI

# Run on all changes except:
# - doc file changes
# - changes to the website, *except* for "website/src", since that
#   code needs validation.  The website has a separate workflow
# - changes to the bazel config, since it has its own workflow
# - changes to the python bindings
# - changes to workflows other than this one

on:
  push:
    paths:
      - '**'
      - '!**.md'
      - '!website/**'
      - 'website/src/**'
      - '!bazel/**'
      - '!src/wrappers/**'
      - '!.github/workflows/**'
      - '.github/workflows/ci_workflow.yml'
  pull_request:
    paths:
      - '**'
      - '!**.md'
      - '!website/**'
      - 'website/src/**'
      - '!bazel/**'
      - '!src/wrappers/**'
      - '!.github/workflows/**'
      - '.github/workflows/ci_workflow.yml'

permissions:
  contents: read

jobs:
  # Linux jobs run in Docker containers, so the latest OS version is OK. macOS 
  # and Windows jobs need to be locked to specific virtual environment 
  # versions to mitigate issues from OS updates, and will require maintenance 
  # as OS versions are retired.

  # Each job validates that the proper files have been installed by
  # checking the contents of CMake's install_manifest.txt file. The
  # exact contents vary depending o the build options, so this
  # validates both that the settings have the expected effect, and
  # that the CMake configuration does what is expected. Each job
  # compares to a version of the install_manifest.txt archived in
  # share/ci/install_manifest with the expected context for that
  # build.

  # ---------------------------------------------------------------------------
  # Linux
  # ---------------------------------------------------------------------------

  linux:
    name: '${{ matrix.build}}. Linux ${{ matrix.vfx-cy }} 
       ${{ matrix.compiler-desc }}
       C++${{ matrix.cxx-standard }}
       ${{ matrix.build-type }}
       ${{ matrix.label }}'
    uses: ./.github/workflows/ci_steps.yml
    runs-on: ubuntu-latest
    container:
      # DockerHub: https://hub.docker.com/u/aswf
      # Source: https://github.com/AcademySoftwareFoundation/aswf-docker
      image: aswf/ci-openexr:${{ matrix.vfx-cy }}
    strategy:
      matrix:
        build: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        include:

          # defaults for the builds below
          - vfx-cy: 2024
          - compiler-desc: gcc11.2.1
          - cxx-compiler: g++
          - cc-compiler: gcc
          - cxx-standard: 17
          - build-type: Release
          - BUILD_SHARED_LIBS: 'ON'
          - OPENEXR_ENABLE_THREADING: 'ON'
          - OPENEXR_INSTALL_PKG_CONFIG: 'ON'
          - OPENEXR_INSTALL_DOCS: 'ON'
          - OPENEXR_BUILD_EXAMPLES: 'ON'
          - OPENEXR_BUILD_TOOLS: 'ON'
          - OPENEXR_BUILD_PYTHON: 'OFF'
          - OPENEXR_FORCE_INTERNAL_IMATH: 'OFF'
          - OPENEXR_FORCE_INTERNAL_DEFLATE: 'OFF'
          - BUILD_TESTING: 'OFF'

          - build: 1
            build-type: Debug

          - build: 2

          - build: 3
            label: Static
            BUILD_SHARED_LIBS: 'OFF'

          - build: 4
            label: threads=OFF
            OPENEXR_ENABLE_THREADING: 'OFF'

          - build: 5
            label: pkgconfig=OFF, examples=OFF, tools=OFF, docs=OFF, internal deflate
            OPENEXR_INSTALL_PKG_CONFIG: 'OFF'
            OPENEXR_INSTALL_DOCS: 'OFF'
            OPENEXR_BUILD_EXAMPLES: 'OFF'
            OPENEXR_BUILD_TOOLS: 'OFF'
            OPENEXR_FORCE_INTERNAL_IMATH: 'ON'
            OPENEXR_FORCE_INTERNAL_DEFLATE: 'ON'
            BUILD_TESTING: 'OFF'

          - build: 6
            compiler-desc: clang15.0
            cxx-compiler: clang++
            cc-compiler: clang

          - build: 7
            compiler-desc: clang14.0
            cxx-compiler: clang++
            cc-compiler: clang

          - build: 8
            vfx-cy: 2023

          - build: 9
            vfx-cy: 2022
            compiler-desc: gcc9.3.1

          - build: 10
            vfx-cy: 2021
            compiler-desc: gcc9.3.1

    env:
      CXX: ${{ matrix.cxx-compiler }}
      CC: ${{ matrix.cc-compiler }}
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true


  # ---------------------------------------------------------------------------
  # macOS
  # ---------------------------------------------------------------------------
  
  macOS:
    name: '${{ matrix.build}}. macOS-${{ matrix.osver }} ${{ matrix.vfx-cy }} 
       ${{ matrix.compiler-desc }}
       C++${{ matrix.cxx-standard }}
       ${{ matrix.build-type }}
       ${{ matrix.label }}'
    uses: ./.github/workflows/ci_steps.yml
    runs-on: macos-${{ matrix.osver }}
    strategy:
      matrix:
        build: [1, 2, 3, 4, 5, 6]
        include:

          # defaults settings. These are inherited for each build below.
          - vfx-cy: 2024
          - osver: 12.0
          - compiler-desc: AppleClang11.0
          - cxx-standard: 17
          - build-type: Release
          - BUILD_SHARED_LIBS: 'ON'
          - OPENEXR_ENABLE_THREADING: 'ON'
          - OPENEXR_INSTALL_PKG_CONFIG: 'ON'
          - OPENEXR_INSTALL_DOCS: 'ON'
          - OPENEXR_BUILD_EXAMPLES: 'ON'
          - OPENEXR_BUILD_TOOLS: 'ON'
          - OPENEXR_BUILD_PYTHON: 'OFF'
          - OPENEXR_FORCE_INTERNAL_IMATH: 'OFF'
          - OPENEXR_FORCE_INTERNAL_DEFLATE: 'OFF'
          - BUILD_TESTING: 'OFF'

          - build: 1
            build-type: Debug

          - build: 2

          - build: 3
            label: Static
            BUILD_SHARED_LIBS: 'OFF'

          - build: 4
            label: threads=OFF
            OPENEXR_ENABLE_THREADING: 'OFF'

          - build: 5
            label: pkgconfig=OFF, examples=OFF, tools=OFF, docs=OFF, internal imath+deflate
            OPENEXR_INSTALL_PKG_CONFIG: 'OFF'
            OPENEXR_INSTALL_DOCS: 'OFF'
            OPENEXR_BUILD_EXAMPLES: 'OFF'
            OPENEXR_BUILD_TOOLS: 'OFF'
            OPENEXR_FORCE_INTERNAL_IMATH: 'ON'
            OPENEXR_FORCE_INTERNAL_DEFLATE: 'ON'
            BUILD_TESTING: 'OFF'

          - build: 6
            osver: 11.0

  Windows:
    name: '${{ matrix.build}}. Windows-${{ matrix.osver }} ${{ matrix.vfx-cy }} 
       ${{ matrix.compiler-desc }}
       C++${{ matrix.cxx-standard }}
       ${{ matrix.build-type }}
       ${{ matrix.label }}'
    uses: ./.github/workflows/ci_steps.yml
    runs-on: windows-${{ matrix.osver }}
    strategy:
      matrix:
        build: [1, 2, 3, 4, 5, 6]
        include:

          # defaults settings. These are inherited for each build below.
          - vfx-cy: 2023
          - osver: 2022
          - compiler-desc: msvc17.5
          - cxx-standard: 17
          - build-type: Release
          - BUILD_SHARED_LIBS: 'ON'
          - OPENEXR_ENABLE_THREADING: 'ON'
          - OPENEXR_INSTALL_PKG_CONFIG: 'ON'
          - OPENEXR_INSTALL_DOCS: 'OFF'
          - OPENEXR_BUILD_EXAMPLES: 'ON'
          - OPENEXR_BUILD_TOOLS: 'ON'
          - OPENEXR_BUILD_PYTHON: 'OFF'
          - OPENEXR_FORCE_INTERNAL_IMATH: 'OFF'
          - OPENEXR_FORCE_INTERNAL_DEFLATE: 'OFF'
          - BUILD_TESTING: 'OFF'

          - build: 1
            build-type: Debug

          - build: 2

          - build: 3
            label: Static
            BUILD_SHARED_LIBS: 'OFF'

          - build: 4
            label: threads=OFF
            OPENEXR_ENABLE_THREADING: 'OFF'

          - build: 5
            label: pkgconfig=OFF, examples=OFF, tools=OFF, docs=OFF, internal imath+deflate
            OPENEXR_INSTALL_PKG_CONFIG: 'OFF'
            OPENEXR_INSTALL_DOCS: 'OFF'
            OPENEXR_BUILD_EXAMPLES: 'OFF'
            OPENEXR_BUILD_TOOLS: 'OFF'
            OPENEXR_FORCE_INTERNAL_IMATH: 'ON'
            OPENEXR_FORCE_INTERNAL_DEFLATE: 'ON'
            BUILD_TESTING: 'OFF'

          - build: 6
            vfx-cy: 2022
            compiler-desc: msvc16.11
            osver: 2019

          - build: 6
            vfx-cy: 2022
            compiler-desc: msvc16.11
            osver: 2019
            BUILD_SHARED_LIBS: 'OFF'


