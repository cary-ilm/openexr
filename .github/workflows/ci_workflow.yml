# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) Contributors to the OpenEXR Project.
#
# GitHub Actions workflow file
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: CI

on:
  push:
    # Versioned branches and tags are ignored for OpenEXR <= 1.x.x
    branches-ignore:
      - RB-2.*
    tags-ignore:
      - v1.*
      - v2.*
    # Jobs are skipped when ONLY Markdown (*.md) files are changed
    paths-ignore:
      - '**.md'
  pull_request:
    branches-ignore:
      - RB-2.*
    tags-ignore:
      - v1.*
      - v2.*
    paths-ignore:
      - '**.md'

jobs:
  # Linux jobs run in Docker containers, so the latest OS version is OK. macOS 
  # and Windows jobs need to be locked to specific virtual environment 
  # versions to mitigate issues from OS updates, and will require maintenance 
  # as OS versions are retired.
  #
  # GH Actions (Free plan) supports 20 concurrent jobs, with 5 concurrent macOS 
  # jobs. This workflow tries to utilize (but not exceed) that budget to 
  # promote timely CI.

  # ---------------------------------------------------------------------------
  # Linux
  # ---------------------------------------------------------------------------
  # TODO: Add ARM build. Add sanitize build.

  docs:
    name: 'Docs'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create build directories
        run: |
          mkdir _install
          mkdir _build
      - name: Install doxygen & imagemagick
        run: sudo apt-get install -y doxygen imagemagick
      - name: Install sphinx requirements
        run: pip3 install -r docs/requirements.txt
      - name: Test convert
        run: find . -name "*.exr" -exec "convert {} foo.jpg" \;
      - name: test_images.py
        run: python3 docs/scripts/test_images.py
      - name: Configure
        run: |
          cmake .. \
                -DCMAKE_INSTALL_PREFIX=../_install \
                -DBUILD_DOCS='ON' \
                -DBUILD_TESTING='OFF' \
                -DOPENEXR_BUILD_TOOLS='ON' \
                -DOPENEXR_RUN_FUZZ_TESTS='OFF' \
                -DOPENEXR_ENABLE_THREADING='OFF'
        working-directory: _build
      - name: Build
        run: |
          cmake --build . \
                --target install \
                --config Release
        working-directory: _build
    
